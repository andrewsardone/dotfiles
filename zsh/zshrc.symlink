# path
[ -z "$APS_PATH" ] && export APS_PATH="$HOME/bin:/usr/local/bin"
[ -z "$DEFAULT_PATH" ] && export DEFAULT_PATH=$PATH
export PATH="$APS_PATH:$DEFAULT_PATH"
export MANPATH="/usr/local/man:/usr/local/mysql/man:/usr/local/git/man:$MANPATH"

# zshrc reloading
alias reload!='source ~/.zshrc'

# rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# colors
export LSCOLORS="exfxcxdxbxegedabagacad"
export CLICOLOR=true

# sensible ls
alias ls="ls -hG"
alias l="ls -a"
alias ll="ls -la"

function aps_smart_ls {
  clear && pwd
  if [[ `ls -a $* | wc -l` -lt 40 ]]; then
    ll $*
  else
    l $*
  fi
}
alias sl=aps_smart_ls

# navigation
function aps_pushd {
  pushd $1 && aps_smart_ls
}
alias f=aps_pushd

function aps_popd {
  popd && aps_smart_ls
}
alias d=aps_popd

alias fh=f ~
alias cdh=cd ~ && pwd

# lolXcode
alias ded='rm -rf ~/Library/Developer/Xcode/DerivedData/'

# editor / readline setup
export EDITOR=vim
bindkey -e

# C-x C-e bash-ism to edit the current command
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

# prompt
autoload -U colors && colors

function aps_end_prompt() {
  echo %{$fg_bold[green]%}\\n\> %{$reset_color%}
}

export PROMPT="$(aps_end_prompt)"

# history
setopt APPEND_HISTORY # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS
export HISTSIZE=100000 SAVEHIST=100000 HISTFILE=~/.zhistory

# Stores all history into log files
# via http://blog.andrewhays.net/love-your-terminal
function precmd() {
  if [ "$(id -u)" -ne 0 ]; then
    FULL_CMD_LOG="$HOME/.logs/zsh-history-$(date -u "+%Y-%m-%d").log"
    echo "$USER@`hostname`:`pwd` [$(date -u)] `\history -1`" >> ${FULL_CMD_LOG}
  fi
}

# pager
export LESS="-RIM"

# rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# A Poor Man's Notational Velocity
# via http://onethingwell.org/post/457674798/a-poor-mans-notational-velocity
function n {
  vi "~/Dropbox/Documents/Notes/$*.txt"
}

function ns {
  if [ "$#" == "0" ]; then
    ls -c ~/Dropbox/Documents/Notes
  else
    ls -c ~/Dropbox/Documents/Notes | grep $1
  fi
}

# nutshell
eval "$(/Users/andrew/source/nutshell/nub/bin/nub init -)"

# autocomplete
autoload -U compinit && compinit

# Task management

# list TODO/FIX lines from the current project
alias todos="ack --nogroup '(TODO|FIX(ME)?):'"

# create a Taskpaper todo file in the current folder
# via http://brettterpstra.com/2013/03/31/a-few-more-of-my-favorite-shell-aliases/
alias tp='touch todo.taskpaper && open -a "Taskpaper" todo.taskpaper'
